#!/bin/bash

set -eo pipefail

indent() {
  sed -u 's/^/       /'
}

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
buildpack=$(cd "$(dirname $0)/.." && pwd)


# Accept user-defined environment
if test -f ${build}/.buildpack.env; then
    source ${build}/.buildpack.env
fi

ELM_VERSION=${ELM_VERSION:-0.16}
S3_URL=https://s3.amazonaws.com/heroku-buildpack-elm/assets

download() {
           url=$1
           basename=$2
           if test -f ${basename}
           then
            true
           else
            wget -nv -c ${url}/${basename}
           fi
}

error() {
    msg=$1
    echo "    !! ${msg}"
    exit 1
}

mkcd() {
    mkdir -p $1 && cd $1
}

function write_profile_d_script() {
  echo "-----> Creating .profile.d script"
  mkdir -p $build/.profile.d

  local export_line="export PATH=\$HOME/.platform_tools/elm-${ELM_VERSION}/bin:\$PATH"
  echo $export_line >> $build/.profile.d/elm_buildpack_path.sh
}

function write_export_script() {
  echo "-----> Creating export script"

  local export_line="export PATH=\$HOME/.platform_tools/elm-${ELM_VERSION}/bin:\$PATH"
  echo $export_line >> $buildpack/export
}

mkcd ${build}/.platform_tools/elm-${ELM_VERSION}/bin

echo "-----> Retrieving ${ELM_VERSION}"
download ${S3_URL}/elm/${ELM_VERSION} elm
download ${S3_URL}/elm/${ELM_VERSION} elm-package
download ${S3_URL}/elm/${ELM_VERSION} elm-make

chmod a+x ${build}/.platform_tools/elm-${ELM_VERSION}/bin/*

write_profile_d_script
write_export_script
